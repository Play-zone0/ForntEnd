{"ast":null,"code":"var _jsxFileName = \"/Users/pavanreddy/PycharmProjects/my-react-app/src/components/Policyholders.js\",\n  _s = $RefreshSig$();\n//// src/components/Policyholders.js\n//import React, { useState, useEffect } from 'react';\n//import api from '../api/api';\n//\n//const Policyholders = () => {\n//  const [policyholders, setPolicyholders] = useState([]);\n//  const [newHolder, setNewHolder] = useState({ id: '', name: '', age: '' });\n//  const [editingId, setEditingId] = useState(null);\n//  const [editingData, setEditingData] = useState({ id: '', name: '', age: '' });\n//\n//  useEffect(() => {\n//    fetchPolicyholders();\n//  }, []);\n//\n//  const fetchPolicyholders = async () => {\n//    try {\n//      const response = await api.get('/policyholders/');\n//      setPolicyholders(response.data);\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error fetching policyholders');\n//    }\n//  };\n//\n//  const handleCreate = async (e) => {\n//    e.preventDefault();\n//    try {\n//      // The backend may auto-generate the id so we only send name and age.\n//      const payload = {\n//        id: Number(newHolder.id),\n//        name: newHolder.name,\n//        age: Number(newHolder.age)\n//      };\n//      await api.post('/policyholder/', payload);\n//      setNewHolder({ id: '', name: '', age: '' });\n//      fetchPolicyholders();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error creating policyholder');\n//    }\n//  };\n//\n//  const handleEdit = (holder) => {\n//    setEditingId(holder.id);\n//    setEditingData({ id: holder.id, name: holder.name, age: holder.age });\n//  };\n//\n//  const handleUpdate = async (id) => {\n//    try {\n//      const payload = {\n//          id: Number(editingData.id),\n//          name: editingData.name,\n//          age: Number(editingData.age)\n//      };\n//      await api.put(`/policyholder/${id}`, payload);\n//      setEditingId(null);\n//      fetchPolicyholders();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error updating policyholder');\n//    }\n//  };\n//\n//  const handleDelete = async (id) => {\n//    try {\n//      await api.delete(`/policyholder/${id}`);\n//      fetchPolicyholders();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error deleting policyholder');\n//    }\n//  };\n//\n//  return (\n//    <div style={{ padding: '1rem' }}>\n//      <h1>Policyholders</h1>\n//      <form onSubmit={handleCreate}>\n//        <h2>Create Policyholder</h2>\n//        <input\n//          type=\"number\"\n//          placeholder=\"ID\"\n//          value={newHolder.id}\n//          onChange={(e) => setNewHolder({ ...newHolder, id: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"text\"\n//          placeholder=\"Name\"\n//          value={newHolder.name}\n//          onChange={(e) => setNewHolder({ ...newHolder, name: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"number\"\n//          placeholder=\"Age\"\n//          value={newHolder.age}\n//          onChange={(e) => setNewHolder({ ...newHolder, age: e.target.value })}\n//          required\n//        />\n//        <button type=\"submit\">Create</button>\n//      </form>\n//      <hr />\n//      <h2>Existing Policyholders</h2>\n//      <ul>\n//        {policyholders.map((holder) => (\n//          <li key={holder.id} style={{ marginBottom: '1rem' }}>\n//            {editingId === holder.id ? (\n//              <>\n//                <input\n//                  type=\"number\"\n//                  value={editingData.id}\n//                  onChange={(e) =>\n//                    setEditingData({ ...editingData, id: e.target.value })\n//                  }\n//                />\n//                <input\n//                  type=\"text\"\n//                  value={editingData.name}\n//                  onChange={(e) =>\n//                    setEditingData({ ...editingData, name: e.target.value })\n//                  }\n//                />\n//                <input\n//                  type=\"number\"\n//                  value={editingData.age}\n//                  onChange={(e) =>\n//                    setEditingData({ ...editingData, age: e.target.value })\n//                  }\n//                />\n//                <button onClick={() => handleUpdate(holder.id)}>Save</button>\n//                <button onClick={() => setEditingId(null)}>Cancel</button>\n//              </>\n//            ) : (\n//              <>\n//                <strong>ID: {holder.id}</strong> | <strong>{holder.name}</strong> (Age: {holder.age})\n//                <button onClick={() => handleEdit(holder)}>Edit</button>\n//                <button onClick={() => handleDelete(holder.id)}>Delete</button>\n//              </>\n//            )}\n//          </li>\n//        ))}\n//      </ul>\n//    </div>\n//  );\n//};\n//\n//export default Policyholders;\n\n// src/components/Policyholders.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Card, CardContent, Typography, TextField, Button, Grid, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport { Edit, Delete } from '@mui/icons-material';\nimport api from '../api/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Policyholders = () => {\n  _s();\n  const [policyholders, setPolicyholders] = useState([]);\n  const [newHolder, setNewHolder] = useState({\n    id: '',\n    name: '',\n    age: ''\n  });\n  const [editingId, setEditingId] = useState(null);\n  const [editingData, setEditingData] = useState({\n    id: '',\n    name: '',\n    age: ''\n  });\n  useEffect(() => {\n    fetchPolicyholders();\n  }, []);\n  const fetchPolicyholders = async () => {\n    try {\n      const response = await api.get('/policyholders/');\n      setPolicyholders(response.data);\n    } catch (error) {\n      console.error(error);\n      alert('Error fetching policyholders');\n    }\n  };\n  const handleCreate = async e => {\n    e.preventDefault();\n    try {\n      const payload = {\n        id: Number(newHolder.id),\n        name: newHolder.name,\n        age: Number(newHolder.age)\n      };\n      await api.post('/policyholder/', payload);\n      setNewHolder({\n        id: '',\n        name: '',\n        age: ''\n      });\n      fetchPolicyholders();\n    } catch (error) {\n      console.error(error);\n      alert('Error creating policyholder');\n    }\n  };\n  const handleEdit = holder => {\n    setEditingId(holder.id);\n    setEditingData({\n      id: holder.id,\n      name: holder.name,\n      age: holder.age\n    });\n  };\n  const handleUpdate = async id => {\n    try {\n      const payload = {\n        id: Number(editingData.id),\n        name: editingData.name,\n        age: Number(editingData.age)\n      };\n      await api.put(`/policyholder/${id}`, payload);\n      setEditingId(null);\n      fetchPolicyholders();\n    } catch (error) {\n      console.error(error);\n      alert('Error updating policyholder');\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/policyholder/${id}`);\n      fetchPolicyholders();\n    } catch (error) {\n      console.error(error);\n      alert('Error deleting policyholder');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Policyholders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreate,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"ID\",\n                type: \"number\",\n                value: newHolder.id,\n                onChange: e => setNewHolder({\n                  ...newHolder,\n                  id: e.target.value\n                }),\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name\",\n                value: newHolder.name,\n                onChange: e => setNewHolder({\n                  ...newHolder,\n                  name: e.target.value\n                }),\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Age\",\n                type: \"number\",\n                value: newHolder.age,\n                onChange: e => setNewHolder({\n                  ...newHolder,\n                  age: e.target.value\n                }),\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mt: 4\n          },\n          children: \"Existing Policyholders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: policyholders.map(holder => /*#__PURE__*/_jsxDEV(ListItem, {\n            secondaryAction: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => handleEdit(holder),\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => handleDelete(holder.id),\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true),\n            children: editingId === holder.id ? /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"ID\",\n                  type: \"number\",\n                  value: editingData.id,\n                  onChange: e => setEditingData({\n                    ...editingData,\n                    id: e.target.value\n                  }),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Name\",\n                  value: editingData.name,\n                  onChange: e => setEditingData({\n                    ...editingData,\n                    name: e.target.value\n                  }),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Age\",\n                  type: \"number\",\n                  value: editingData.age,\n                  onChange: e => setEditingData({\n                    ...editingData,\n                    age: e.target.value\n                  }),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => handleUpdate(holder.id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  onClick: () => setEditingId(null),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `ID: ${holder.id} | ${holder.name} (Age: ${holder.age})`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this)\n          }, holder.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(Policyholders, \"lvtbOA0Y9kZrE2CVmBqQPjMqVPM=\");\n_c = Policyholders;\nexport default Policyholders;\nvar _c;\n$RefreshReg$(_c, \"Policyholders\");","map":{"version":3,"names":["React","useState","useEffect","Container","Card","CardContent","Typography","TextField","Button","Grid","List","ListItem","ListItemText","IconButton","Edit","Delete","api","jsxDEV","_jsxDEV","Fragment","_Fragment","Policyholders","_s","policyholders","setPolicyholders","newHolder","setNewHolder","id","name","age","editingId","setEditingId","editingData","setEditingData","fetchPolicyholders","response","get","data","error","console","alert","handleCreate","e","preventDefault","payload","Number","post","handleEdit","holder","handleUpdate","put","handleDelete","delete","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","item","xs","sm","label","type","value","onChange","target","fullWidth","required","color","map","secondaryAction","edge","onClick","alignItems","primary","_c","$RefreshReg$"],"sources":["/Users/pavanreddy/PycharmProjects/my-react-app/src/components/Policyholders.js"],"sourcesContent":["//// src/components/Policyholders.js\n//import React, { useState, useEffect } from 'react';\n//import api from '../api/api';\n//\n//const Policyholders = () => {\n//  const [policyholders, setPolicyholders] = useState([]);\n//  const [newHolder, setNewHolder] = useState({ id: '', name: '', age: '' });\n//  const [editingId, setEditingId] = useState(null);\n//  const [editingData, setEditingData] = useState({ id: '', name: '', age: '' });\n//\n//  useEffect(() => {\n//    fetchPolicyholders();\n//  }, []);\n//\n//  const fetchPolicyholders = async () => {\n//    try {\n//      const response = await api.get('/policyholders/');\n//      setPolicyholders(response.data);\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error fetching policyholders');\n//    }\n//  };\n//\n//  const handleCreate = async (e) => {\n//    e.preventDefault();\n//    try {\n//      // The backend may auto-generate the id so we only send name and age.\n//      const payload = {\n//        id: Number(newHolder.id),\n//        name: newHolder.name,\n//        age: Number(newHolder.age)\n//      };\n//      await api.post('/policyholder/', payload);\n//      setNewHolder({ id: '', name: '', age: '' });\n//      fetchPolicyholders();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error creating policyholder');\n//    }\n//  };\n//\n//  const handleEdit = (holder) => {\n//    setEditingId(holder.id);\n//    setEditingData({ id: holder.id, name: holder.name, age: holder.age });\n//  };\n//\n//  const handleUpdate = async (id) => {\n//    try {\n//      const payload = {\n//          id: Number(editingData.id),\n//          name: editingData.name,\n//          age: Number(editingData.age)\n//      };\n//      await api.put(`/policyholder/${id}`, payload);\n//      setEditingId(null);\n//      fetchPolicyholders();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error updating policyholder');\n//    }\n//  };\n//\n//  const handleDelete = async (id) => {\n//    try {\n//      await api.delete(`/policyholder/${id}`);\n//      fetchPolicyholders();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error deleting policyholder');\n//    }\n//  };\n//\n//  return (\n//    <div style={{ padding: '1rem' }}>\n//      <h1>Policyholders</h1>\n//      <form onSubmit={handleCreate}>\n//        <h2>Create Policyholder</h2>\n//        <input\n//          type=\"number\"\n//          placeholder=\"ID\"\n//          value={newHolder.id}\n//          onChange={(e) => setNewHolder({ ...newHolder, id: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"text\"\n//          placeholder=\"Name\"\n//          value={newHolder.name}\n//          onChange={(e) => setNewHolder({ ...newHolder, name: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"number\"\n//          placeholder=\"Age\"\n//          value={newHolder.age}\n//          onChange={(e) => setNewHolder({ ...newHolder, age: e.target.value })}\n//          required\n//        />\n//        <button type=\"submit\">Create</button>\n//      </form>\n//      <hr />\n//      <h2>Existing Policyholders</h2>\n//      <ul>\n//        {policyholders.map((holder) => (\n//          <li key={holder.id} style={{ marginBottom: '1rem' }}>\n//            {editingId === holder.id ? (\n//              <>\n//                <input\n//                  type=\"number\"\n//                  value={editingData.id}\n//                  onChange={(e) =>\n//                    setEditingData({ ...editingData, id: e.target.value })\n//                  }\n//                />\n//                <input\n//                  type=\"text\"\n//                  value={editingData.name}\n//                  onChange={(e) =>\n//                    setEditingData({ ...editingData, name: e.target.value })\n//                  }\n//                />\n//                <input\n//                  type=\"number\"\n//                  value={editingData.age}\n//                  onChange={(e) =>\n//                    setEditingData({ ...editingData, age: e.target.value })\n//                  }\n//                />\n//                <button onClick={() => handleUpdate(holder.id)}>Save</button>\n//                <button onClick={() => setEditingId(null)}>Cancel</button>\n//              </>\n//            ) : (\n//              <>\n//                <strong>ID: {holder.id}</strong> | <strong>{holder.name}</strong> (Age: {holder.age})\n//                <button onClick={() => handleEdit(holder)}>Edit</button>\n//                <button onClick={() => handleDelete(holder.id)}>Delete</button>\n//              </>\n//            )}\n//          </li>\n//        ))}\n//      </ul>\n//    </div>\n//  );\n//};\n//\n//export default Policyholders;\n\n\n// src/components/Policyholders.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Card, CardContent, Typography, TextField, Button, Grid, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport { Edit, Delete } from '@mui/icons-material';\nimport api from '../api/api';\n\nconst Policyholders = () => {\n  const [policyholders, setPolicyholders] = useState([]);\n  const [newHolder, setNewHolder] = useState({ id: '', name: '', age: '' });\n  const [editingId, setEditingId] = useState(null);\n  const [editingData, setEditingData] = useState({ id: '', name: '', age: '' });\n\n  useEffect(() => {\n    fetchPolicyholders();\n  }, []);\n\n  const fetchPolicyholders = async () => {\n    try {\n      const response = await api.get('/policyholders/');\n      setPolicyholders(response.data);\n    } catch (error) {\n      console.error(error);\n      alert('Error fetching policyholders');\n    }\n  };\n\n  const handleCreate = async (e) => {\n    e.preventDefault();\n    try {\n      const payload = { id: Number(newHolder.id), name: newHolder.name, age: Number(newHolder.age) };\n      await api.post('/policyholder/', payload);\n      setNewHolder({ id: '', name: '', age: '' });\n      fetchPolicyholders();\n    } catch (error) {\n      console.error(error);\n      alert('Error creating policyholder');\n    }\n  };\n\n  const handleEdit = (holder) => {\n    setEditingId(holder.id);\n    setEditingData({ id: holder.id, name: holder.name, age: holder.age });\n  };\n\n  const handleUpdate = async (id) => {\n    try {\n      const payload = { id: Number(editingData.id), name: editingData.name, age: Number(editingData.age) };\n      await api.put(`/policyholder/${id}`, payload);\n      setEditingId(null);\n      fetchPolicyholders();\n    } catch (error) {\n      console.error(error);\n      alert('Error updating policyholder');\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await api.delete(`/policyholder/${id}`);\n      fetchPolicyholders();\n    } catch (error) {\n      console.error(error);\n      alert('Error deleting policyholder');\n    }\n  };\n\n  return (\n    <Container sx={{ mt: 4 }}>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\" gutterBottom>Policyholders</Typography>\n          <form onSubmit={handleCreate}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={3}>\n                <TextField\n                  label=\"ID\"\n                  type=\"number\"\n                  value={newHolder.id}\n                  onChange={(e) => setNewHolder({ ...newHolder, id: e.target.value })}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  label=\"Name\"\n                  value={newHolder.name}\n                  onChange={(e) => setNewHolder({ ...newHolder, name: e.target.value })}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <TextField\n                  label=\"Age\"\n                  type=\"number\"\n                  value={newHolder.age}\n                  onChange={(e) => setNewHolder({ ...newHolder, age: e.target.value })}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={2}>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n                  Create\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n          <Typography variant=\"h5\" sx={{ mt: 4 }}>Existing Policyholders</Typography>\n          <List>\n            {policyholders.map((holder) => (\n              <ListItem key={holder.id} secondaryAction={\n                <>\n                  <IconButton edge=\"end\" onClick={() => handleEdit(holder)}>\n                    <Edit />\n                  </IconButton>\n                  <IconButton edge=\"end\" onClick={() => handleDelete(holder.id)}>\n                    <Delete />\n                  </IconButton>\n                </>\n              }>\n                {editingId === holder.id ? (\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item xs={3}>\n                      <TextField\n                        label=\"ID\"\n                        type=\"number\"\n                        value={editingData.id}\n                        onChange={(e) => setEditingData({ ...editingData, id: e.target.value })}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={4}>\n                      <TextField\n                        label=\"Name\"\n                        value={editingData.name}\n                        onChange={(e) => setEditingData({ ...editingData, name: e.target.value })}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField\n                        label=\"Age\"\n                        type=\"number\"\n                        value={editingData.age}\n                        onChange={(e) => setEditingData({ ...editingData, age: e.target.value })}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Button variant=\"contained\" onClick={() => handleUpdate(holder.id)}>\n                        Save\n                      </Button>\n                      <Button variant=\"text\" onClick={() => setEditingId(null)}>\n                        Cancel\n                      </Button>\n                    </Grid>\n                  </Grid>\n                ) : (\n                  <ListItemText primary={`ID: ${holder.id} | ${holder.name} (Age: ${holder.age})`} />\n                )}\n              </ListItem>\n            ))}\n          </List>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Policyholders;\n\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}