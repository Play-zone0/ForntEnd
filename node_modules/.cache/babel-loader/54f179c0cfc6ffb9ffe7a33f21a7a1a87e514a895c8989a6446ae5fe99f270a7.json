{"ast":null,"code":"var _jsxFileName = \"/Users/pavanreddy/PycharmProjects/my-react-app/src/components/Policies.js\",\n  _s = $RefreshSig$();\n//import React, { useState, useEffect } from 'react';\n//import api from '../api/api';\n//\n//const Policies = () => {\n//  const [policies, setPolicies] = useState([]);\n//  const [newPolicy, setNewPolicy] = useState({ id: '', policyholder_id: '', type: '', coverage_amount: '' });\n//  const [editingId, setEditingId] = useState(null);\n//  const [editingData, setEditingData] = useState({ id: '', policyholder_id: '', type: '', coverage_amount: '' });\n//\n//  useEffect(() => {\n//    fetchPolicies();\n//  }, []);\n//\n//  const fetchPolicies = async () => {\n//    try {\n//      const response = await api.get('/policies/');\n//      setPolicies(response.data);\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error fetching policies');\n//    }\n//  };\n//\n//  const handleCreate = async (e) => {\n//    e.preventDefault();\n//    try {\n//      // Convert id, policyholder_id, and coverage_amount to numbers if needed.\n//      const payload = {\n//        id: Number(newPolicy.id),\n//        policyholder_id: Number(newPolicy.policyholder_id),\n//        type: newPolicy.type,\n//        coverage_amount: Number(newPolicy.coverage_amount)\n//      };\n//      await api.post('/policy/', payload);\n//      setNewPolicy({ id: '', policyholder_id: '', type: '', coverage_amount: '' });\n//      fetchPolicies();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error creating policy');\n//    }\n//  };\n//\n//  const handleEdit = (policy) => {\n//    setEditingId(policy.id);\n//    setEditingData({\n//      id: policy.id,\n//      policyholder_id: policy.policyholder_id,\n//      type: policy.type,\n//      coverage_amount: policy.coverage_amount,\n//    });\n//  };\n//\n//  const handleUpdate = async (id) => {\n//    try {\n//      const payload = {\n//        id: Number(editingData.id),\n//        policyholder_id: Number(editingData.policyholder_id),\n//        type: editingData.type,\n//        coverage_amount: Number(editingData.coverage_amount),\n//      };\n//      await api.put(`/policy/${id}`, payload);\n//      setEditingId(null);\n//      fetchPolicies();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error updating policy');\n//    }\n//  };\n//\n//  const handleDelete = async (id) => {\n//    try {\n//      await api.delete(`/policy/${id}`);\n//      fetchPolicies();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error deleting policy');\n//    }\n//  };\n//\n//  return (\n//    <div style={{ padding: '1rem' }}>\n//      <h1>Policies</h1>\n//      <form onSubmit={handleCreate}>\n//        <h2>Create Policy</h2>\n//        <input\n//          type=\"number\"\n//          placeholder=\"ID\"\n//          value={newPolicy.id}\n//          onChange={(e) => setNewPolicy({ ...newPolicy, id: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"number\"\n//          placeholder=\"Policyholder ID\"\n//          value={newPolicy.policyholder_id}\n//          onChange={(e) => setNewPolicy({ ...newPolicy, policyholder_id: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"text\"\n//          placeholder=\"Type\"\n//          value={newPolicy.type}\n//          onChange={(e) => setNewPolicy({ ...newPolicy, type: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"number\"\n//          placeholder=\"Coverage Amount\"\n//          value={newPolicy.coverage_amount}\n//          onChange={(e) => setNewPolicy({ ...newPolicy, coverage_amount: e.target.value })}\n//          required\n//        />\n//        <button type=\"submit\">Create</button>\n//      </form>\n//      <hr />\n//      <h2>Existing Policies</h2>\n//      <ul>\n//        {policies.map((policy) => (\n//          <li key={policy.id} style={{ marginBottom: '1rem' }}>\n//            {editingId === policy.id ? (\n//              <>\n//                <input\n//                  type=\"number\"\n//                  value={editingData.id}\n//                  onChange={(e) => setEditingData({ ...editingData, id: e.target.value })}\n//                />\n//                <input\n//                  type=\"number\"\n//                  value={editingData.policyholder_id}\n//                  onChange={(e) => setEditingData({ ...editingData, policyholder_id: e.target.value })}\n//                />\n//                <input\n//                  type=\"text\"\n//                  value={editingData.type}\n//                  onChange={(e) => setEditingData({ ...editingData, type: e.target.value })}\n//                />\n//                <input\n//                  type=\"number\"\n//                  value={editingData.coverage_amount}\n//                  onChange={(e) => setEditingData({ ...editingData, coverage_amount: e.target.value })}\n//                />\n//                <button onClick={() => handleUpdate(policy.id)}>Save</button>\n//                <button onClick={() => setEditingId(null)}>Cancel</button>\n//              </>\n//            ) : (\n//              <>\n//                <div>\n//                  <strong>ID: {policy.id}</strong> | Policyholder ID: {policy.policyholder_id} | Type: {policy.type} | Coverage: {policy.coverage_amount}\n//                </div>\n//                <button onClick={() => handleEdit(policy)}>Edit</button>\n//                <button onClick={() => handleDelete(policy.id)}>Delete</button>\n//              </>\n//            )}\n//          </li>\n//        ))}\n//      </ul>\n//    </div>\n//  );\n//};\n//\n//export default Policies;\n\n// src/components/Policies.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Card, CardContent, Typography, TextField, Button, Grid, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport { Edit, Delete } from '@mui/icons-material';\nimport api from '../api/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Policies = () => {\n  _s();\n  const [policies, setPolicies] = useState([]);\n  const [newPolicy, setNewPolicy] = useState({\n    id: '',\n    policyholder_id: '',\n    type: '',\n    coverage_amount: ''\n  });\n  const [editingId, setEditingId] = useState(null);\n  const [editingData, setEditingData] = useState({\n    id: '',\n    policyholder_id: '',\n    type: '',\n    coverage_amount: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchPolicies();\n  }, []);\n  const fetchPolicies = async () => {\n    try {\n      const response = await api.get('/policies/');\n      setPolicies(response.data);\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        alert(\"Not authorized. Please login again.\");\n        navigate('/login');\n      } else {\n        alert('Error fetching policies');\n      }\n      console.error(error);\n    }\n  };\n  const handleCreate = async e => {\n    e.preventDefault();\n    try {\n      const payload = {\n        id: Number(newPolicy.id),\n        policyholder_id: Number(newPolicy.policyholder_id),\n        type: newPolicy.type,\n        coverage_amount: Number(newPolicy.coverage_amount)\n      };\n      await api.post('/policy/', payload);\n      setNewPolicy({\n        id: '',\n        policyholder_id: '',\n        type: '',\n        coverage_amount: ''\n      });\n      fetchPolicies();\n    } catch (error) {\n      console.error(error);\n      alert('Error creating policy');\n    }\n  };\n  const handleEdit = policy => {\n    setEditingId(policy.id);\n    setEditingData({\n      id: policy.id,\n      policyholder_id: policy.policyholder_id,\n      type: policy.type,\n      coverage_amount: policy.coverage_amount\n    });\n  };\n  const handleUpdate = async id => {\n    try {\n      const payload = {\n        id: Number(editingData.id),\n        policyholder_id: Number(editingData.policyholder_id),\n        type: editingData.type,\n        coverage_amount: Number(editingData.coverage_amount)\n      };\n      await api.put(`/policy/${id}`, payload);\n      setEditingId(null);\n      fetchPolicies();\n    } catch (error) {\n      console.error(error);\n      alert('Error updating policy');\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/policy/${id}`);\n      fetchPolicies();\n    } catch (error) {\n      console.error(error);\n      alert('Error deleting policy');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Policies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreate,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 2,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"ID\",\n                type: \"number\",\n                value: newPolicy.id,\n                onChange: e => setNewPolicy({\n                  ...newPolicy,\n                  id: e.target.value\n                }),\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Policyholder ID\",\n                type: \"number\",\n                value: newPolicy.policyholder_id,\n                onChange: e => setNewPolicy({\n                  ...newPolicy,\n                  policyholder_id: e.target.value\n                }),\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Type\",\n                value: newPolicy.type,\n                onChange: e => setNewPolicy({\n                  ...newPolicy,\n                  type: e.target.value\n                }),\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 2,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Coverage Amount\",\n                type: \"number\",\n                value: newPolicy.coverage_amount,\n                onChange: e => setNewPolicy({\n                  ...newPolicy,\n                  coverage_amount: e.target.value\n                }),\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mt: 4\n          },\n          children: \"Existing Policies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: policies.map(policy => /*#__PURE__*/_jsxDEV(ListItem, {\n            secondaryAction: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => handleEdit(policy),\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => handleDelete(policy.id),\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true),\n            children: editingId === policy.id ? /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"ID\",\n                  type: \"number\",\n                  value: editingData.id,\n                  onChange: e => setEditingData({\n                    ...editingData,\n                    id: e.target.value\n                  }),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Policyholder ID\",\n                  type: \"number\",\n                  value: editingData.policyholder_id,\n                  onChange: e => setEditingData({\n                    ...editingData,\n                    policyholder_id: e.target.value\n                  }),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Type\",\n                  value: editingData.type,\n                  onChange: e => setEditingData({\n                    ...editingData,\n                    type: e.target.value\n                  }),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Coverage\",\n                  type: \"number\",\n                  value: editingData.coverage_amount,\n                  onChange: e => setEditingData({\n                    ...editingData,\n                    coverage_amount: e.target.value\n                  }),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => handleUpdate(policy.id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  onClick: () => setEditingId(null),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `ID: ${policy.id} | Policyholder ID: ${policy.policyholder_id} | Type: ${policy.type} | Coverage: ${policy.coverage_amount}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this)\n          }, policy.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(Policies, \"4Lrjcjgb0heEeBRwYrk6oCm3dyY=\", false, function () {\n  return [useNavigate];\n});\n_c = Policies;\nexport default Policies;\nvar _c;\n$RefreshReg$(_c, \"Policies\");","map":{"version":3,"names":["React","useState","useEffect","Container","Card","CardContent","Typography","TextField","Button","Grid","List","ListItem","ListItemText","IconButton","Edit","Delete","api","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Policies","_s","policies","setPolicies","newPolicy","setNewPolicy","id","policyholder_id","type","coverage_amount","editingId","setEditingId","editingData","setEditingData","navigate","fetchPolicies","response","get","data","error","status","alert","console","handleCreate","e","preventDefault","payload","Number","post","handleEdit","policy","handleUpdate","put","handleDelete","delete","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","item","xs","sm","label","value","onChange","target","fullWidth","required","color","map","secondaryAction","edge","onClick","alignItems","primary","_c","$RefreshReg$"],"sources":["/Users/pavanreddy/PycharmProjects/my-react-app/src/components/Policies.js"],"sourcesContent":["//import React, { useState, useEffect } from 'react';\n//import api from '../api/api';\n//\n//const Policies = () => {\n//  const [policies, setPolicies] = useState([]);\n//  const [newPolicy, setNewPolicy] = useState({ id: '', policyholder_id: '', type: '', coverage_amount: '' });\n//  const [editingId, setEditingId] = useState(null);\n//  const [editingData, setEditingData] = useState({ id: '', policyholder_id: '', type: '', coverage_amount: '' });\n//\n//  useEffect(() => {\n//    fetchPolicies();\n//  }, []);\n//\n//  const fetchPolicies = async () => {\n//    try {\n//      const response = await api.get('/policies/');\n//      setPolicies(response.data);\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error fetching policies');\n//    }\n//  };\n//\n//  const handleCreate = async (e) => {\n//    e.preventDefault();\n//    try {\n//      // Convert id, policyholder_id, and coverage_amount to numbers if needed.\n//      const payload = {\n//        id: Number(newPolicy.id),\n//        policyholder_id: Number(newPolicy.policyholder_id),\n//        type: newPolicy.type,\n//        coverage_amount: Number(newPolicy.coverage_amount)\n//      };\n//      await api.post('/policy/', payload);\n//      setNewPolicy({ id: '', policyholder_id: '', type: '', coverage_amount: '' });\n//      fetchPolicies();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error creating policy');\n//    }\n//  };\n//\n//  const handleEdit = (policy) => {\n//    setEditingId(policy.id);\n//    setEditingData({\n//      id: policy.id,\n//      policyholder_id: policy.policyholder_id,\n//      type: policy.type,\n//      coverage_amount: policy.coverage_amount,\n//    });\n//  };\n//\n//  const handleUpdate = async (id) => {\n//    try {\n//      const payload = {\n//        id: Number(editingData.id),\n//        policyholder_id: Number(editingData.policyholder_id),\n//        type: editingData.type,\n//        coverage_amount: Number(editingData.coverage_amount),\n//      };\n//      await api.put(`/policy/${id}`, payload);\n//      setEditingId(null);\n//      fetchPolicies();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error updating policy');\n//    }\n//  };\n//\n//  const handleDelete = async (id) => {\n//    try {\n//      await api.delete(`/policy/${id}`);\n//      fetchPolicies();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error deleting policy');\n//    }\n//  };\n//\n//  return (\n//    <div style={{ padding: '1rem' }}>\n//      <h1>Policies</h1>\n//      <form onSubmit={handleCreate}>\n//        <h2>Create Policy</h2>\n//        <input\n//          type=\"number\"\n//          placeholder=\"ID\"\n//          value={newPolicy.id}\n//          onChange={(e) => setNewPolicy({ ...newPolicy, id: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"number\"\n//          placeholder=\"Policyholder ID\"\n//          value={newPolicy.policyholder_id}\n//          onChange={(e) => setNewPolicy({ ...newPolicy, policyholder_id: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"text\"\n//          placeholder=\"Type\"\n//          value={newPolicy.type}\n//          onChange={(e) => setNewPolicy({ ...newPolicy, type: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"number\"\n//          placeholder=\"Coverage Amount\"\n//          value={newPolicy.coverage_amount}\n//          onChange={(e) => setNewPolicy({ ...newPolicy, coverage_amount: e.target.value })}\n//          required\n//        />\n//        <button type=\"submit\">Create</button>\n//      </form>\n//      <hr />\n//      <h2>Existing Policies</h2>\n//      <ul>\n//        {policies.map((policy) => (\n//          <li key={policy.id} style={{ marginBottom: '1rem' }}>\n//            {editingId === policy.id ? (\n//              <>\n//                <input\n//                  type=\"number\"\n//                  value={editingData.id}\n//                  onChange={(e) => setEditingData({ ...editingData, id: e.target.value })}\n//                />\n//                <input\n//                  type=\"number\"\n//                  value={editingData.policyholder_id}\n//                  onChange={(e) => setEditingData({ ...editingData, policyholder_id: e.target.value })}\n//                />\n//                <input\n//                  type=\"text\"\n//                  value={editingData.type}\n//                  onChange={(e) => setEditingData({ ...editingData, type: e.target.value })}\n//                />\n//                <input\n//                  type=\"number\"\n//                  value={editingData.coverage_amount}\n//                  onChange={(e) => setEditingData({ ...editingData, coverage_amount: e.target.value })}\n//                />\n//                <button onClick={() => handleUpdate(policy.id)}>Save</button>\n//                <button onClick={() => setEditingId(null)}>Cancel</button>\n//              </>\n//            ) : (\n//              <>\n//                <div>\n//                  <strong>ID: {policy.id}</strong> | Policyholder ID: {policy.policyholder_id} | Type: {policy.type} | Coverage: {policy.coverage_amount}\n//                </div>\n//                <button onClick={() => handleEdit(policy)}>Edit</button>\n//                <button onClick={() => handleDelete(policy.id)}>Delete</button>\n//              </>\n//            )}\n//          </li>\n//        ))}\n//      </ul>\n//    </div>\n//  );\n//};\n//\n//export default Policies;\n\n\n\n// src/components/Policies.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Card, CardContent, Typography, TextField, Button, Grid, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport { Edit, Delete } from '@mui/icons-material';\nimport api from '../api/api';\nimport { useNavigate } from 'react-router-dom';\n\nconst Policies = () => {\n  const [policies, setPolicies] = useState([]);\n  const [newPolicy, setNewPolicy] = useState({ id: '', policyholder_id: '', type: '', coverage_amount: '' });\n  const [editingId, setEditingId] = useState(null);\n  const [editingData, setEditingData] = useState({ id: '', policyholder_id: '', type: '', coverage_amount: '' });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchPolicies();\n  }, []);\n\n  const fetchPolicies = async () => {\n    try {\n      const response = await api.get('/policies/');\n      setPolicies(response.data);\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        alert(\"Not authorized. Please login again.\");\n        navigate('/login');\n      } else {\n        alert('Error fetching policies');\n      }\n      console.error(error);\n    }\n  };\n\n  const handleCreate = async (e) => {\n    e.preventDefault();\n    try {\n      const payload = {\n        id: Number(newPolicy.id),\n        policyholder_id: Number(newPolicy.policyholder_id),\n        type: newPolicy.type,\n        coverage_amount: Number(newPolicy.coverage_amount),\n      };\n      await api.post('/policy/', payload);\n      setNewPolicy({ id: '', policyholder_id: '', type: '', coverage_amount: '' });\n      fetchPolicies();\n    } catch (error) {\n      console.error(error);\n      alert('Error creating policy');\n    }\n  };\n\n  const handleEdit = (policy) => {\n    setEditingId(policy.id);\n    setEditingData({\n      id: policy.id,\n      policyholder_id: policy.policyholder_id,\n      type: policy.type,\n      coverage_amount: policy.coverage_amount,\n    });\n  };\n\n  const handleUpdate = async (id) => {\n    try {\n      const payload = {\n        id: Number(editingData.id),\n        policyholder_id: Number(editingData.policyholder_id),\n        type: editingData.type,\n        coverage_amount: Number(editingData.coverage_amount),\n      };\n      await api.put(`/policy/${id}`, payload);\n      setEditingId(null);\n      fetchPolicies();\n    } catch (error) {\n      console.error(error);\n      alert('Error updating policy');\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await api.delete(`/policy/${id}`);\n      fetchPolicies();\n    } catch (error) {\n      console.error(error);\n      alert('Error deleting policy');\n    }\n  };\n\n  return (\n    <Container sx={{ mt: 4 }}>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\" gutterBottom>Policies</Typography>\n          <form onSubmit={handleCreate}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={2}>\n                <TextField\n                  label=\"ID\"\n                  type=\"number\"\n                  value={newPolicy.id}\n                  onChange={(e) => setNewPolicy({ ...newPolicy, id: e.target.value })}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <TextField\n                  label=\"Policyholder ID\"\n                  type=\"number\"\n                  value={newPolicy.policyholder_id}\n                  onChange={(e) => setNewPolicy({ ...newPolicy, policyholder_id: e.target.value })}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <TextField\n                  label=\"Type\"\n                  value={newPolicy.type}\n                  onChange={(e) => setNewPolicy({ ...newPolicy, type: e.target.value })}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={2}>\n                <TextField\n                  label=\"Coverage Amount\"\n                  type=\"number\"\n                  value={newPolicy.coverage_amount}\n                  onChange={(e) => setNewPolicy({ ...newPolicy, coverage_amount: e.target.value })}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={2}>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n                  Create\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n          <Typography variant=\"h5\" sx={{ mt: 4 }}>Existing Policies</Typography>\n          <List>\n            {policies.map((policy) => (\n              <ListItem key={policy.id} secondaryAction={\n                <>\n                  <IconButton edge=\"end\" onClick={() => handleEdit(policy)}>\n                    <Edit />\n                  </IconButton>\n                  <IconButton edge=\"end\" onClick={() => handleDelete(policy.id)}>\n                    <Delete />\n                  </IconButton>\n                </>\n              }>\n                {editingId === policy.id ? (\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item xs={2}>\n                      <TextField\n                        label=\"ID\"\n                        type=\"number\"\n                        value={editingData.id}\n                        onChange={(e) => setEditingData({ ...editingData, id: e.target.value })}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField\n                        label=\"Policyholder ID\"\n                        type=\"number\"\n                        value={editingData.policyholder_id}\n                        onChange={(e) => setEditingData({ ...editingData, policyholder_id: e.target.value })}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField\n                        label=\"Type\"\n                        value={editingData.type}\n                        onChange={(e) => setEditingData({ ...editingData, type: e.target.value })}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={2}>\n                      <TextField\n                        label=\"Coverage\"\n                        type=\"number\"\n                        value={editingData.coverage_amount}\n                        onChange={(e) => setEditingData({ ...editingData, coverage_amount: e.target.value })}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Button variant=\"contained\" onClick={() => handleUpdate(policy.id)}>\n                        Save\n                      </Button>\n                      <Button variant=\"text\" onClick={() => setEditingId(null)}>\n                        Cancel\n                      </Button>\n                    </Grid>\n                  </Grid>\n                ) : (\n                  <ListItemText primary={`ID: ${policy.id} | Policyholder ID: ${policy.policyholder_id} | Type: ${policy.type} | Coverage: ${policy.coverage_amount}`} />\n                )}\n              </ListItem>\n            ))}\n          </List>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Policies;\n\n"],"mappingslD,SAASC,SAAS,EAAEC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,UAAU,QAAQ,eAAe;AAC3I,SAASC,IAAI,EAAEC,MAAM,QAAQ,qBAAqB;AAClD,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC;IAAE2B,EAAE,EAAE,EAAE;IAAEC,eAAe,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,eAAe,EAAE;EAAG,CAAC,CAAC;EAC1G,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC;IAAE2B,EAAE,EAAE,EAAE;IAAEC,eAAe,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,eAAe,EAAE;EAAG,CAAC,CAAC;EAC9G,MAAMK,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAE9Bf,SAAS,CAAC,MAAM;IACdmC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMtB,GAAG,CAACuB,GAAG,CAAC,YAAY,CAAC;MAC5Cd,WAAW,CAACa,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QACnDC,KAAK,CAAC,qCAAqC,CAAC;QAC5CP,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,MAAM;QACLO,KAAK,CAAC,yBAAyB,CAAC;MAClC;MACAC,OAAO,CAACH,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMI,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,OAAO,GAAG;QACdpB,EAAE,EAAEqB,MAAM,CAACvB,SAAS,CAACE,EAAE,CAAC;QACxBC,eAAe,EAAEoB,MAAM,CAACvB,SAAS,CAACG,eAAe,CAAC;QAClDC,IAAI,EAAEJ,SAAS,CAACI,IAAI;QACpBC,eAAe,EAAEkB,MAAM,CAACvB,SAAS,CAACK,eAAe;MACnD,CAAC;MACD,MAAMf,GAAG,CAACkC,IAAI,CAAC,UAAU,EAAEF,OAAO,CAAC;MACnCrB,YAAY,CAAC;QAAEC,EAAE,EAAE,EAAE;QAAEC,eAAe,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,eAAe,EAAE;MAAG,CAAC,CAAC;MAC5EM,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAACA,KAAK,CAAC;MACpBE,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,MAAMQ,UAAU,GAAIC,MAAM,IAAK;IAC7BnB,YAAY,CAACmB,MAAM,CAACxB,EAAE,CAAC;IACvBO,cAAc,CAAC;MACbP,EAAE,EAAEwB,MAAM,CAACxB,EAAE;MACbC,eAAe,EAAEuB,MAAM,CAACvB,eAAe;MACvCC,IAAI,EAAEsB,MAAM,CAACtB,IAAI;MACjBC,eAAe,EAAEqB,MAAM,CAACrB;IAC1B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMsB,YAAY,GAAG,MAAOzB,EAAE,IAAK;IACjC,IAAI;MACF,MAAMoB,OAAO,GAAG;QACdpB,EAAE,EAAEqB,MAAM,CAACf,WAAW,CAACN,EAAE,CAAC;QAC1BC,eAAe,EAAEoB,MAAM,CAACf,WAAW,CAACL,eAAe,CAAC;QACpDC,IAAI,EAAEI,WAAW,CAACJ,IAAI;QACtBC,eAAe,EAAEkB,MAAM,CAACf,WAAW,CAACH,eAAe;MACrD,CAAC;MACD,MAAMf,GAAG,CAACsC,GAAG,CAAC,WAAW1B,EAAE,EAAE,EAAEoB,OAAO,CAAC;MACvCf,YAAY,CAAC,IAAI,CAAC;MAClBI,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAACA,KAAK,CAAC;MACpBE,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,MAAMY,YAAY,GAAG,MAAO3B,EAAE,IAAK;IACjC,IAAI;MACF,MAAMZ,GAAG,CAACwC,MAAM,CAAC,WAAW5B,EAAE,EAAE,CAAC;MACjCS,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAACA,KAAK,CAAC;MACpBE,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,oBACExB,OAAA,CAAChB,SAAS;IAACsD,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,eACvBxC,OAAA,CAACf,IAAI;MAAAuD,QAAA,eACHxC,OAAA,CAACd,WAAW;QAAAsD,QAAA,gBACVxC,OAAA,CAACb,UAAU;UAACsD,OAAO,EAAC,IAAI;UAACC,YAAY;UAAAF,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC3D9C,OAAA;UAAM+C,QAAQ,EAAErB,YAAa;UAAAc,QAAA,eAC3BxC,OAAA,CAACV,IAAI;YAAC0D,SAAS;YAACC,OAAO,EAAE,CAAE;YAAAT,QAAA,gBACzBxC,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAACC,EAAE,EAAE,EAAG;cAACC,EAAE,EAAE,CAAE;cAAAZ,QAAA,eACvBxC,OAAA,CAACZ,SAAS;gBACRiE,KAAK,EAAC,IAAI;gBACV1C,IAAI,EAAC,QAAQ;gBACb2C,KAAK,EAAE/C,SAAS,CAACE,EAAG;gBACpB8C,QAAQ,EAAG5B,CAAC,IAAKnB,YAAY,CAAC;kBAAE,GAAGD,SAAS;kBAAEE,EAAE,EAAEkB,CAAC,CAAC6B,MAAM,CAACF;gBAAM,CAAC,CAAE;gBACpEG,SAAS;gBACTC,QAAQ;cAAA;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACP9C,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAACC,EAAE,EAAE,EAAG;cAACC,EAAE,EAAE,CAAE;cAAAZ,QAAA,eACvBxC,OAAA,CAACZ,SAAS;gBACRiE,KAAK,EAAC,iBAAiB;gBACvB1C,IAAI,EAAC,QAAQ;gBACb2C,KAAK,EAAE/C,SAAS,CAACG,eAAgB;gBACjC6C,QAAQ,EAAG5B,CAAC,IAAKnB,YAAY,CAAC;kBAAE,GAAGD,SAAS;kBAAEG,eAAe,EAAEiB,CAAC,CAAC6B,MAAM,CAACF;gBAAM,CAAC,CAAE;gBACjFG,SAAS;gBACTC,QAAQ;cAAA;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACP9C,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAACC,EAAE,EAAE,EAAG;cAACC,EAAE,EAAE,CAAE;cAAAZ,QAAA,eACvBxC,OAAA,CAACZ,SAAS;gBACRiE,KAAK,EAAC,MAAM;gBACZC,KAAK,EAAE/C,SAAS,CAACI,IAAK;gBACtB4C,QAAQ,EAAG5B,CAAC,IAAKnB,YAAY,CAAC;kBAAE,GAAGD,SAAS;kBAAEI,IAAI,EAAEgB,CAAC,CAAC6B,MAAM,CAACF;gBAAM,CAAC,CAAE;gBACtEG,SAAS;gBACTC,QAAQ;cAAA;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACP9C,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAACC,EAAE,EAAE,EAAG;cAACC,EAAE,EAAE,CAAE;cAAAZ,QAAA,eACvBxC,OAAA,CAACZ,SAAS;gBACRiE,KAAK,EAAC,iBAAiB;gBACvB1C,IAAI,EAAC,QAAQ;gBACb2C,KAAK,EAAE/C,SAAS,CAACK,eAAgB;gBACjC2C,QAAQ,EAAG5B,CAAC,IAAKnB,YAAY,CAAC;kBAAE,GAAGD,SAAS;kBAAEK,eAAe,EAAEe,CAAC,CAAC6B,MAAM,CAACF;gBAAM,CAAC,CAAE;gBACjFG,SAAS;gBACTC,QAAQ;cAAA;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACP9C,OAAA,CAACV,IAAI;cAAC4D,IAAI;cAACC,EAAE,EAAE,EAAG;cAACC,EAAE,EAAE,CAAE;cAAAZ,QAAA,eACvBxC,OAAA,CAACX,MAAM;gBAACsB,IAAI,EAAC,QAAQ;gBAAC8B,OAAO,EAAC,WAAW;gBAACkB,KAAK,EAAC,SAAS;gBAACF,SAAS;gBAAAjB,QAAA,EAAC;cAEpE;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACP9C,OAAA,CAACb,UAAU;UAACsD,OAAO,EAAC,IAAI;UAACH,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAC,QAAA,EAAC;QAAiB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACtE9C,OAAA,CAACT,IAAI;UAAAiD,QAAA,EACFnC,QAAQ,CAACuD,GAAG,CAAE3B,MAAM,iBACnBjC,OAAA,CAACR,QAAQ;YAAiBqE,eAAe,eACvC7D,OAAA,CAAAE,SAAA;cAAAsC,QAAA,gBACExC,OAAA,CAACN,UAAU;gBAACoE,IAAI,EAAC,KAAK;gBAACC,OAAO,EAAEA,CAAA,KAAM/B,UAAU,CAACC,MAAM,CAAE;gBAAAO,QAAA,eACvDxC,OAAA,CAACL,IAAI;kBAAAgD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACb9C,OAAA,CAACN,UAAU;gBAACoE,IAAI,EAAC,KAAK;gBAACC,OAAO,EAAEA,CAAA,KAAM3B,YAAY,CAACH,MAAM,CAACxB,EAAE,CAAE;gBAAA+B,QAAA,eAC5DxC,OAAA,CAACJ,MAAM;kBAAA+C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA,eACb,CACH;YAAAN,QAAA,EACE3B,SAAS,KAAKoB,MAAM,CAACxB,EAAE,gBACtBT,OAAA,CAACV,IAAI;cAAC0D,SAAS;cAACC,OAAO,EAAE,CAAE;cAACe,UAAU,EAAC,QAAQ;cAAAxB,QAAA,gBAC7CxC,OAAA,CAACV,IAAI;gBAAC4D,IAAI;gBAACC,EAAE,EAAE,CAAE;gBAAAX,QAAA,eACfxC,OAAA,CAACZ,SAAS;kBACRiE,KAAK,EAAC,IAAI;kBACV1C,IAAI,EAAC,QAAQ;kBACb2C,KAAK,EAAEvC,WAAW,CAACN,EAAG;kBACtB8C,QAAQ,EAAG5B,CAAC,IAAKX,cAAc,CAAC;oBAAE,GAAGD,WAAW;oBAAEN,EAAE,EAAEkB,CAAC,CAAC6B,MAAM,CAACF;kBAAM,CAAC,CAAE;kBACxEG,SAAS;gBAAA;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACP9C,OAAA,CAACV,IAAI;gBAAC4D,IAAI;gBAACC,EAAE,EAAE,CAAE;gBAAAX,QAAA,eACfxC,OAAA,CAACZ,SAAS;kBACRiE,KAAK,EAAC,iBAAiB;kBACvB1C,IAAI,EAAC,QAAQ;kBACb2C,KAAK,EAAEvC,WAAW,CAACL,eAAgB;kBACnC6C,QAAQ,EAAG5B,CAAC,IAAKX,cAAc,CAAC;oBAAE,GAAGD,WAAW;oBAAEL,eAAe,EAAEiB,CAAC,CAAC6B,MAAM,CAACF;kBAAM,CAAC,CAAE;kBACrFG,SAAS;gBAAA;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACP9C,OAAA,CAACV,IAAI;gBAAC4D,IAAI;gBAACC,EAAE,EAAE,CAAE;gBAAAX,QAAA,eACfxC,OAAA,CAACZ,SAAS;kBACRiE,KAAK,EAAC,MAAM;kBACZC,KAAK,EAAEvC,WAAW,CAACJ,IAAK;kBACxB4C,QAAQ,EAAG5B,CAAC,IAAKX,cAAc,CAAC;oBAAE,GAAGD,WAAW;oBAAEJ,IAAI,EAAEgB,CAAC,CAAC6B,MAAM,CAACF;kBAAM,CAAC,CAAE;kBAC1EG,SAAS;gBAAA;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACP9C,OAAA,CAACV,IAAI;gBAAC4D,IAAI;gBAACC,EAAE,EAAE,CAAE;gBAAAX,QAAA,eACfxC,OAAA,CAACZ,SAAS;kBACRiE,KAAK,EAAC,UAAU;kBAChB1C,IAAI,EAAC,QAAQ;kBACb2C,KAAK,EAAEvC,WAAW,CAACH,eAAgB;kBACnC2C,QAAQ,EAAG5B,CAAC,IAAKX,cAAc,CAAC;oBAAE,GAAGD,WAAW;oBAAEH,eAAe,EAAEe,CAAC,CAAC6B,MAAM,CAACF;kBAAM,CAAC,CAAE;kBACrFG,SAAS;gBAAA;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACP9C,OAAA,CAACV,IAAI;gBAAC4D,IAAI;gBAACC,EAAE,EAAE,CAAE;gBAAAX,QAAA,gBACfxC,OAAA,CAACX,MAAM;kBAACoD,OAAO,EAAC,WAAW;kBAACsB,OAAO,EAAEA,CAAA,KAAM7B,YAAY,CAACD,MAAM,CAACxB,EAAE,CAAE;kBAAA+B,QAAA,EAAC;gBAEpE;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACT9C,OAAA,CAACX,MAAM;kBAACoD,OAAO,EAAC,MAAM;kBAACsB,OAAO,EAAEA,CAAA,KAAMjD,YAAY,CAAC,IAAI,CAAE;kBAAA0B,QAAA,EAAC;gBAE1D;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,gBAEP9C,OAAA,CAACP,YAAY;cAACwE,OAAO,EAAE,OAAOhC,MAAM,CAACxB,EAAE,uBAAuBwB,MAAM,CAACvB,eAAe,YAAYuB,MAAM,CAACtB,IAAI,gBAAgBsB,MAAM,CAACrB,eAAe;YAAG;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UACvJ,GA1DYb,MAAM,CAACxB,EAAE;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA2Dd,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAAC1C,EAAA,CA3MID,QAAQ;EAAA,QAKKL,WAAW;AAAA;AAAAoE,EAAA,GALxB/D,QAAQ;AA6Md,eAAeA,QAAQ;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}