{"ast":null,"code":"var _jsxFileName = \"/Users/pavanreddy/PycharmProjects/my-react-app/src/components/Claims.js\",\n  _s = $RefreshSig$();\n//// src/components/Claims.js\n//import React, { useState, useEffect } from 'react';\n//import api from '../api/api';\n//\n//const Claims = () => {\n//  const [claims, setClaims] = useState([]);\n//  const [newClaim, setNewClaim] = useState({ id: '', policy_id: '', amount_claimed: '', status: '' });\n//  const [editingId, setEditingId] = useState(null);\n//  const [editingData, setEditingData] = useState({ id: '', policy_id: '', amount_claimed: '', status: '' });\n//\n//  useEffect(() => {\n//    fetchClaims();\n//  }, []);\n//\n//  const fetchClaims = async () => {\n//    try {\n//      const response = await api.get('/claims/');\n//      setClaims(response.data);\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error fetching claims');\n//    }\n//  };\n//\n//  const handleCreate = async (e) => {\n//    e.preventDefault();\n//    try {\n//      const payload = {\n//        id: Number(newClaim.id),\n//        policy_id: Number(newClaim.policy_id),\n//        amount_claimed: Number(newClaim.amount_claimed),\n//        status: newClaim.status,\n//      };\n//      await api.post('/claim/', payload);\n//      setNewClaim({ id: '', policy_id: '', amount_claimed: '', status: '' });\n//      fetchClaims();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error creating claim');\n//    }\n//  };\n//\n//  const handleEdit = (claim) => {\n//    setEditingId(claim.id);\n//    setEditingData({\n//      id: claim.id,\n//      policy_id: claim.policy_id,\n//      amount_claimed: claim.amount_claimed,\n//      status: claim.status,\n//    });\n//  };\n//\n//  const handleUpdate = async (id) => {\n//    try {\n//      const payload = {\n//        id: Number(editingData.id),\n//        policy_id: Number(editingData.policy_id),\n//        amount_claimed: Number(editingData.amount_claimed),\n//        status: editingData.status,\n//      };\n//      await api.put(`/claim/${id}`, payload);\n//      setEditingId(null);\n//      fetchClaims();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error updating claim');\n//    }\n//  };\n//\n//  const handleDelete = async (id) => {\n//    try {\n//      await api.delete(`/claim/${id}`);\n//      fetchClaims();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error deleting claim');\n//    }\n//  };\n//\n//  return (\n//    <div style={{ padding: '1rem' }}>\n//      <h1>Claims</h1>\n//      <form onSubmit={handleCreate}>\n//        <h2>Create Claim</h2>\n//        <input\n//          type=\"number\"\n//          placeholder=\"ID\"\n//          value={newClaim.id}\n//          onChange={(e) => setNewClaim({ ...newClaim, id: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"number\"\n//          placeholder=\"Policy ID\"\n//          value={newClaim.policy_id}\n//          onChange={(e) => setNewClaim({ ...newClaim, policy_id: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"number\"\n//          placeholder=\"Amount Claimed\"\n//          value={newClaim.amount_claimed}\n//          onChange={(e) => setNewClaim({ ...newClaim, amount_claimed: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"text\"\n//          placeholder=\"Status\"\n//          value={newClaim.status}\n//          onChange={(e) => setNewClaim({ ...newClaim, status: e.target.value })}\n//          required\n//        />\n//        <button type=\"submit\">Create</button>\n//      </form>\n//      <hr />\n//      <h2>Existing Claims</h2>\n//      <ul>\n//        {claims.map((claim) => (\n//          <li key={claim.id} style={{ marginBottom: '1rem' }}>\n//            {editingId === claim.id ? (\n//              <>\n//                <input\n//                  type=\"number\"\n//                  value={editingData.id}\n//                  onChange={(e) => setEditingData({ ...editingData, id: e.target.value })}\n//                />\n//                <input\n//                  type=\"number\"\n//                  value={editingData.policy_id}\n//                  onChange={(e) => setEditingData({ ...editingData, policy_id: e.target.value })}\n//                />\n//                <input\n//                  type=\"number\"\n//                  value={editingData.amount_claimed}\n//                  onChange={(e) => setEditingData({ ...editingData, amount_claimed: e.target.value })}\n//                />\n//                <input\n//                  type=\"text\"\n//                  value={editingData.status}\n//                  onChange={(e) => setEditingData({ ...editingData, status: e.target.value })}\n//                />\n//                <button onClick={() => handleUpdate(claim.id)}>Save</button>\n//                <button onClick={() => setEditingId(null)}>Cancel</button>\n//              </>\n//            ) : (\n//              <>\n//                <div>\n//                  <strong>ID: {claim.id}</strong> | Policy ID: {claim.policy_id} | Amount Claimed: {claim.amount_claimed} | Status: {claim.status}\n//                </div>\n//                <button onClick={() => handleEdit(claim)}>Edit</button>\n//                <button onClick={() => handleDelete(claim.id)}>Delete</button>\n//              </>\n//            )}\n//          </li>\n//        ))}\n//      </ul>\n//    </div>\n//  );\n//};\n//\n//export default Claims;\n\n// src/components/Claims.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Card, CardContent, Typography, TextField, Button, Grid, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport { Edit, Delete } from '@mui/icons-material';\nimport api from '../api/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Claims = () => {\n  _s();\n  const [claims, setClaims] = useState([]);\n  const [newClaim, setNewClaim] = useState({\n    id: '',\n    policy_id: '',\n    amount_claimed: '',\n    status: ''\n  });\n  const [editingId, setEditingId] = useState(null);\n  const [editingData, setEditingData] = useState({\n    id: '',\n    policy_id: '',\n    amount_claimed: '',\n    status: ''\n  });\n  useEffect(() => {\n    fetchClaims();\n  }, []);\n  const fetchClaims = async () => {\n    try {\n      const response = await api.get('/claims/');\n      setClaims(response.data);\n    } catch (error) {\n      console.error(error);\n      alert('Error fetching claims');\n    }\n  };\n  const handleCreate = async e => {\n    e.preventDefault();\n    try {\n      const payload = {\n        id: Number(newClaim.id),\n        policy_id: Number(newClaim.policy_id),\n        amount_claimed: Number(newClaim.amount_claimed),\n        status: newClaim.status\n      };\n      await api.post('/claim/', payload);\n      setNewClaim({\n        id: '',\n        policy_id: '',\n        amount_claimed: '',\n        status: ''\n      });\n      fetchClaims();\n    } catch (error) {\n      console.error(error);\n      alert('Error creating claim');\n    }\n  };\n  const handleEdit = claim => {\n    setEditingId(claim.id);\n    setEditingData({\n      id: claim.id,\n      policy_id: claim.policy_id,\n      amount_claimed: claim.amount_claimed,\n      status: claim.status\n    });\n  };\n  const handleUpdate = async id => {\n    try {\n      const payload = {\n        id: Number(editingData.id),\n        policy_id: Number(editingData.policy_id),\n        amount_claimed: Number(editingData.amount_claimed),\n        status: editingData.status\n      };\n      await api.put(`/claim/${id}`, payload);\n      setEditingId(null);\n      fetchClaims();\n    } catch (error) {\n      console.error(error);\n      alert('Error updating claim');\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/claim/${id}`);\n      fetchClaims();\n    } catch (error) {\n      console.error(error);\n      alert('Error deleting claim');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Claims\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreate,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 2,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"ID\",\n                type: \"number\",\n                value: newClaim.id,\n                onChange: e => setNewClaim({\n                  ...newClaim,\n                  id: e.target.value\n                }),\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Policy ID\",\n                type: \"number\",\n                value: newClaim.policy_id,\n                onChange: e => setNewClaim({\n                  ...newClaim,\n                  policy_id: e.target.value\n                }),\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Amount Claimed\",\n                type: \"number\",\n                value: newClaim.amount_claimed,\n                onChange: e => setNewClaim({\n                  ...newClaim,\n                  amount_claimed: e.target.value\n                }),\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 2,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Status\",\n                value: newClaim.status,\n                onChange: e => setNewClaim({\n                  ...newClaim,\n                  status: e.target.value\n                }),\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mt: 4\n          },\n          children: \"Existing Claims\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: claims.map(claim => /*#__PURE__*/_jsxDEV(ListItem, {\n            secondaryAction: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => handleEdit(claim),\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => handleDelete(claim.id),\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true),\n            children: editingId === claim.id ? /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"ID\",\n                  type: \"number\",\n                  value: editingData.id,\n                  onChange: e => setEditingData({\n                    ...editingData,\n                    id: e.target.value\n                  }),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Policy ID\",\n                  type: \"number\",\n                  value: editingData.policy_id,\n                  onChange: e => setEditingData({\n                    ...editingData,\n                    policy_id: e.target.value\n                  }),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Amount Claimed\",\n                  type: \"number\",\n                  value: editingData.amount_claimed,\n                  onChange: e => setEditingData({\n                    ...editingData,\n                    amount_claimed: e.target.value\n                  }),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Status\",\n                  value: editingData.status,\n                  onChange: e => setEditingData({\n                    ...editingData,\n                    status: e.target.value\n                  }),\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => handleUpdate(claim.id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  onClick: () => setEditingId(null),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `ID: ${claim.id} | Policy ID: ${claim.policy_id} | Amount Claimed: ${claim.amount_claimed} | Status: ${claim.status}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this)\n          }, claim.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(Claims, \"pFzDQvm5vfGuDJfb6CUwuxKe7tE=\");\n_c = Claims;\nexport default Claims;\nvar _c;\n$RefreshReg$(_c, \"Claims\");","map":{"version":3,"names":["React","useState","useEffect","Container","Card","CardContent","Typography","TextField","Button","Grid","List","ListItem","ListItemText","IconButton","Edit","Delete","api","jsxDEV","_jsxDEV","Fragment","_Fragment","Claims","_s","claims","setClaims","newClaim","setNewClaim","id","policy_id","amount_claimed","status","editingId","setEditingId","editingData","setEditingData","fetchClaims","response","get","data","error","console","alert","handleCreate","e","preventDefault","payload","Number","post","handleEdit","claim","handleUpdate","put","handleDelete","delete","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","item","xs","sm","label","type","value","onChange","target","fullWidth","required","color","map","secondaryAction","edge","onClick","alignItems","primary","_c","$RefreshReg$"],"sources":["/Users/pavanreddy/PycharmProjects/my-react-app/src/components/Claims.js"],"sourcesContent":["//// src/components/Claims.js\n//import React, { useState, useEffect } from 'react';\n//import api from '../api/api';\n//\n//const Claims = () => {\n//  const [claims, setClaims] = useState([]);\n//  const [newClaim, setNewClaim] = useState({ id: '', policy_id: '', amount_claimed: '', status: '' });\n//  const [editingId, setEditingId] = useState(null);\n//  const [editingData, setEditingData] = useState({ id: '', policy_id: '', amount_claimed: '', status: '' });\n//\n//  useEffect(() => {\n//    fetchClaims();\n//  }, []);\n//\n//  const fetchClaims = async () => {\n//    try {\n//      const response = await api.get('/claims/');\n//      setClaims(response.data);\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error fetching claims');\n//    }\n//  };\n//\n//  const handleCreate = async (e) => {\n//    e.preventDefault();\n//    try {\n//      const payload = {\n//        id: Number(newClaim.id),\n//        policy_id: Number(newClaim.policy_id),\n//        amount_claimed: Number(newClaim.amount_claimed),\n//        status: newClaim.status,\n//      };\n//      await api.post('/claim/', payload);\n//      setNewClaim({ id: '', policy_id: '', amount_claimed: '', status: '' });\n//      fetchClaims();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error creating claim');\n//    }\n//  };\n//\n//  const handleEdit = (claim) => {\n//    setEditingId(claim.id);\n//    setEditingData({\n//      id: claim.id,\n//      policy_id: claim.policy_id,\n//      amount_claimed: claim.amount_claimed,\n//      status: claim.status,\n//    });\n//  };\n//\n//  const handleUpdate = async (id) => {\n//    try {\n//      const payload = {\n//        id: Number(editingData.id),\n//        policy_id: Number(editingData.policy_id),\n//        amount_claimed: Number(editingData.amount_claimed),\n//        status: editingData.status,\n//      };\n//      await api.put(`/claim/${id}`, payload);\n//      setEditingId(null);\n//      fetchClaims();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error updating claim');\n//    }\n//  };\n//\n//  const handleDelete = async (id) => {\n//    try {\n//      await api.delete(`/claim/${id}`);\n//      fetchClaims();\n//    } catch (error) {\n//      console.error(error);\n//      alert('Error deleting claim');\n//    }\n//  };\n//\n//  return (\n//    <div style={{ padding: '1rem' }}>\n//      <h1>Claims</h1>\n//      <form onSubmit={handleCreate}>\n//        <h2>Create Claim</h2>\n//        <input\n//          type=\"number\"\n//          placeholder=\"ID\"\n//          value={newClaim.id}\n//          onChange={(e) => setNewClaim({ ...newClaim, id: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"number\"\n//          placeholder=\"Policy ID\"\n//          value={newClaim.policy_id}\n//          onChange={(e) => setNewClaim({ ...newClaim, policy_id: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"number\"\n//          placeholder=\"Amount Claimed\"\n//          value={newClaim.amount_claimed}\n//          onChange={(e) => setNewClaim({ ...newClaim, amount_claimed: e.target.value })}\n//          required\n//        />\n//        <input\n//          type=\"text\"\n//          placeholder=\"Status\"\n//          value={newClaim.status}\n//          onChange={(e) => setNewClaim({ ...newClaim, status: e.target.value })}\n//          required\n//        />\n//        <button type=\"submit\">Create</button>\n//      </form>\n//      <hr />\n//      <h2>Existing Claims</h2>\n//      <ul>\n//        {claims.map((claim) => (\n//          <li key={claim.id} style={{ marginBottom: '1rem' }}>\n//            {editingId === claim.id ? (\n//              <>\n//                <input\n//                  type=\"number\"\n//                  value={editingData.id}\n//                  onChange={(e) => setEditingData({ ...editingData, id: e.target.value })}\n//                />\n//                <input\n//                  type=\"number\"\n//                  value={editingData.policy_id}\n//                  onChange={(e) => setEditingData({ ...editingData, policy_id: e.target.value })}\n//                />\n//                <input\n//                  type=\"number\"\n//                  value={editingData.amount_claimed}\n//                  onChange={(e) => setEditingData({ ...editingData, amount_claimed: e.target.value })}\n//                />\n//                <input\n//                  type=\"text\"\n//                  value={editingData.status}\n//                  onChange={(e) => setEditingData({ ...editingData, status: e.target.value })}\n//                />\n//                <button onClick={() => handleUpdate(claim.id)}>Save</button>\n//                <button onClick={() => setEditingId(null)}>Cancel</button>\n//              </>\n//            ) : (\n//              <>\n//                <div>\n//                  <strong>ID: {claim.id}</strong> | Policy ID: {claim.policy_id} | Amount Claimed: {claim.amount_claimed} | Status: {claim.status}\n//                </div>\n//                <button onClick={() => handleEdit(claim)}>Edit</button>\n//                <button onClick={() => handleDelete(claim.id)}>Delete</button>\n//              </>\n//            )}\n//          </li>\n//        ))}\n//      </ul>\n//    </div>\n//  );\n//};\n//\n//export default Claims;\n\n\n\n// src/components/Claims.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Card, CardContent, Typography, TextField, Button, Grid, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport { Edit, Delete } from '@mui/icons-material';\nimport api from '../api/api';\n\nconst Claims = () => {\n  const [claims, setClaims] = useState([]);\n  const [newClaim, setNewClaim] = useState({ id: '', policy_id: '', amount_claimed: '', status: '' });\n  const [editingId, setEditingId] = useState(null);\n  const [editingData, setEditingData] = useState({ id: '', policy_id: '', amount_claimed: '', status: '' });\n\n  useEffect(() => {\n    fetchClaims();\n  }, []);\n\n  const fetchClaims = async () => {\n    try {\n      const response = await api.get('/claims/');\n      setClaims(response.data);\n    } catch (error) {\n      console.error(error);\n      alert('Error fetching claims');\n    }\n  };\n\n  const handleCreate = async (e) => {\n    e.preventDefault();\n    try {\n      const payload = {\n        id: Number(newClaim.id),\n        policy_id: Number(newClaim.policy_id),\n        amount_claimed: Number(newClaim.amount_claimed),\n        status: newClaim.status,\n      };\n      await api.post('/claim/', payload);\n      setNewClaim({ id: '', policy_id: '', amount_claimed: '', status: '' });\n      fetchClaims();\n    } catch (error) {\n      console.error(error);\n      alert('Error creating claim');\n    }\n  };\n\n  const handleEdit = (claim) => {\n    setEditingId(claim.id);\n    setEditingData({\n      id: claim.id,\n      policy_id: claim.policy_id,\n      amount_claimed: claim.amount_claimed,\n      status: claim.status,\n    });\n  };\n\n  const handleUpdate = async (id) => {\n    try {\n      const payload = {\n        id: Number(editingData.id),\n        policy_id: Number(editingData.policy_id),\n        amount_claimed: Number(editingData.amount_claimed),\n        status: editingData.status,\n      };\n      await api.put(`/claim/${id}`, payload);\n      setEditingId(null);\n      fetchClaims();\n    } catch (error) {\n      console.error(error);\n      alert('Error updating claim');\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await api.delete(`/claim/${id}`);\n      fetchClaims();\n    } catch (error) {\n      console.error(error);\n      alert('Error deleting claim');\n    }\n  };\n\n  return (\n    <Container sx={{ mt: 4 }}>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\" gutterBottom>Claims</Typography>\n          <form onSubmit={handleCreate}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={2}>\n                <TextField\n                  label=\"ID\"\n                  type=\"number\"\n                  value={newClaim.id}\n                  onChange={(e) => setNewClaim({ ...newClaim, id: e.target.value })}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <TextField\n                  label=\"Policy ID\"\n                  type=\"number\"\n                  value={newClaim.policy_id}\n                  onChange={(e) => setNewClaim({ ...newClaim, policy_id: e.target.value })}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={3}>\n                <TextField\n                  label=\"Amount Claimed\"\n                  type=\"number\"\n                  value={newClaim.amount_claimed}\n                  onChange={(e) => setNewClaim({ ...newClaim, amount_claimed: e.target.value })}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={2}>\n                <TextField\n                  label=\"Status\"\n                  value={newClaim.status}\n                  onChange={(e) => setNewClaim({ ...newClaim, status: e.target.value })}\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={2}>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n                  Create\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n          <Typography variant=\"h5\" sx={{ mt: 4 }}>Existing Claims</Typography>\n          <List>\n            {claims.map((claim) => (\n              <ListItem key={claim.id} secondaryAction={\n                <>\n                  <IconButton edge=\"end\" onClick={() => handleEdit(claim)}>\n                    <Edit />\n                  </IconButton>\n                  <IconButton edge=\"end\" onClick={() => handleDelete(claim.id)}>\n                    <Delete />\n                  </IconButton>\n                </>\n              }>\n                {editingId === claim.id ? (\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item xs={2}>\n                      <TextField\n                        label=\"ID\"\n                        type=\"number\"\n                        value={editingData.id}\n                        onChange={(e) => setEditingData({ ...editingData, id: e.target.value })}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField\n                        label=\"Policy ID\"\n                        type=\"number\"\n                        value={editingData.policy_id}\n                        onChange={(e) => setEditingData({ ...editingData, policy_id: e.target.value })}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField\n                        label=\"Amount Claimed\"\n                        type=\"number\"\n                        value={editingData.amount_claimed}\n                        onChange={(e) => setEditingData({ ...editingData, amount_claimed: e.target.value })}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={2}>\n                      <TextField\n                        label=\"Status\"\n                        value={editingData.status}\n                        onChange={(e) => setEditingData({ ...editingData, status: e.target.value })}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Button variant=\"contained\" onClick={() => handleUpdate(claim.id)}>\n                        Save\n                      </Button>\n                      <Button variant=\"text\" onClick={() => setEditingId(null)}>\n                        Cancel\n                      </Button>\n                    </Grid>\n                  </Grid>\n                ) : (\n                  <ListItemText primary={`ID: ${claim.id} | Policy ID: ${claim.policy_id} | Amount Claimed: ${claim.amount_claimed} | Status: ${claim.status}`} />\n                )}\n              </ListItem>\n            ))}\n          </List>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Claims;\n\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}